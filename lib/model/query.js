// Generated by CoffeeScript 1.6.2
(function() {
  var ModelQuery, Query, console_future;

  console_future = require('../console_future');

  Query = require('../query');

  ModelQuery = (function() {
    function ModelQuery() {}

    ModelQuery._createQueryAndRun = function(criteria, data, callback) {
      var query;

      query = new Query(this);
      query[criteria](data);
      if (typeof callback === 'function') {
        query.exec(callback);
      }
      return query;
    };

    ModelQuery._createOptionalQueryAndRun = function(criteria, data, callback) {
      if (typeof data === 'function') {
        return this._createQueryAndRun(criteria, null, data);
      } else {
        return this._createQueryAndRun(criteria, data, callback);
      }
    };

    ModelQuery.query = function() {
      return new Query(this);
    };

    ModelQuery.find = function(id, callback) {
      return this._createQueryAndRun('find', id, callback);
    };

    ModelQuery.findPreserve = function(ids, callback) {
      return this._createQueryAndRun('findPreserve', ids, callback);
    };

    ModelQuery.where = function(condition, callback) {
      return this._createOptionalQueryAndRun('where', condition, callback);
    };

    ModelQuery.select = function(columns, callback) {
      return this._createOptionalQueryAndRun('select', columns, callback);
    };

    ModelQuery.order = function(orders, callback) {
      return this._createOptionalQueryAndRun('order', orders, callback);
    };

    ModelQuery.group = function(group_by, fields, callback) {
      var query;

      query = new Query(this);
      query.group(group_by, fields);
      if (typeof callback === 'function') {
        query.exec(callback);
      }
      return query;
    };

    ModelQuery.count = function(condition, callback) {
      var _this = this;

      if (typeof condition === 'function') {
        callback = condition;
        condition = null;
      }
      return console_future.execute(callback, function(callback) {
        var query;

        if (typeof callback !== 'function') {
          callback = (function() {});
        }
        query = new Query(_this);
        query.where(condition);
        return query.count(callback);
      });
    };

    ModelQuery.update = function(updates, condition, callback) {
      var _this = this;

      if (typeof condition === 'function') {
        callback = condition;
        condition = null;
      }
      return console_future.execute(callback, function(callback) {
        var query;

        if (typeof callback !== 'function') {
          callback = (function() {});
        }
        query = new Query(_this);
        query.where(condition);
        return query.update(updates, callback);
      });
    };

    ModelQuery["delete"] = function(condition, callback) {
      var _this = this;

      if (typeof condition === 'function') {
        callback = condition;
        condition = null;
      }
      return console_future.execute(callback, function(callback) {
        var query;

        if (typeof callback !== 'function') {
          callback = (function() {});
        }
        query = new Query(_this);
        query.where(condition);
        return query["delete"](callback);
      });
    };

    return ModelQuery;

  })();

  module.exports = ModelQuery;

}).call(this);
