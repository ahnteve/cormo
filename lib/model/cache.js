// Generated by CoffeeScript 1.7.1
(function() {
  var ModelCache, Promise, bindDomain, tableize;

  bindDomain = require('../util').bindDomain;

  Promise = require('bluebird');

  tableize = require('../inflector').tableize;

  ModelCache = (function() {
    function ModelCache() {}

    ModelCache._loadFromCache = function(key, refresh) {
      if (refresh) {
        return Promise.reject(new Error('error'));
      }
      return this._connection._connectRedisCache().then((function(_this) {
        return function(redis) {
          key = 'CC.' + tableize(_this._name) + ':' + key;
          return Promise.promisify(redis.get, redis)(key);
        };
      })(this)).then(function(data) {
        if (data == null) {
          return Promise.reject(new Error('error'));
        }
        return Promise.resolve(JSON.parse(data));
      });
    };

    ModelCache._saveToCache = function(key, ttl, data) {
      return this._connection._connectRedisCache().then((function(_this) {
        return function(redis) {
          key = 'CC.' + tableize(_this._name) + ':' + key;
          return Promise.promisify(redis.setex, redis)(key, ttl, JSON.stringify(data));
        };
      })(this));
    };

    ModelCache.removeCache = function(key, callback) {
      return this._connection._connectRedisCache().then((function(_this) {
        return function(redis) {
          key = 'CC.' + tableize(_this._name) + ':' + key;
          return Promise.promisify(redis.del, redis)(key)["catch"](function(error) {});
        };
      })(this)).nodeify(bindDomain(callback));
    };

    return ModelCache;

  })();

  module.exports = ModelCache;

}).call(this);
