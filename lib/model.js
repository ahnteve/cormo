// Generated by CoffeeScript 1.3.3

/*
# Base class for models
*/


(function() {
  var DBModel;

  DBModel = (function() {
    /*
      # Creates a record
      # @param {Object} data
    */

    function DBModel(data) {
      var schema,
        _this = this;
      data = data || {};
      schema = this.constructor._schema;
      Object.keys(schema).forEach(function(field) {
        if (data[field]) {
          return _this[field] = data[field];
        }
      });
    }

    /*
      # Saves data to the database
    */


    DBModel.prototype.save = function(callback) {
      var ctor,
        _this = this;
      if (this.id) {

      } else {
        if (Object.keys(this).length === 0) {
          return callback(new Error('empty data'));
        }
        ctor = this.constructor;
        return ctor._connection._adapter.create(ctor._name, this, function(error, id) {
          if (!error) {
            _this.id = id;
          }
          return callback(error);
        });
      }
    };

    /*
      # Finds a record by id
      # @param {String} id
      # @param {Function} callback
      # @param {Error} callback.error
      # @param {DBModel} callback.record
    */


    DBModel.find = function(id, callback) {
      return this._connection._adapter.findById(this._name, id, callback);
    };

    /*
      # Drops this model from the database
      # @param {Function} callback
      # @param {Error} callback.error
    */


    DBModel.drop = function(callback) {
      return this._connection._adapter.drop(this._name, callback);
    };

    /*
      # Deletes all records from the database
      # @param {Function} callback
      # @param {Error} callback.error
    */


    DBModel.deleteAll = function(callback) {
      return this._connection._adapter.deleteAll(this._name, callback);
    };

    return DBModel;

  })();

  module.exports = DBModel;

}).call(this);
