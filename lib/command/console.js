// Generated by CoffeeScript 1.7.1
(function() {
  var CommandConsole, commander, cormo_console, resolve;

  commander = require('commander');

  cormo_console = require('../util/console');

  resolve = require('path').resolve;

  CommandConsole = (function() {
    function CommandConsole(argv) {
      var cwd, e, load, loads, program, _i, _len;
      loads = [];
      program = new commander.Command('cormo');
      program.usage('console [options]').option('-l, --load <path>', 'load specified module').option('-d, --inspect-depth <depth>', 'specify depth for util.inspect').on('load', function(path) {
        return loads.push(path);
      }).on('inspect-depth', (function(_this) {
        return function(depth) {
          return _this.inspect_depth = depth;
        };
      })(this));
      if (argv.indexOf('--help') >= 0 || argv.indexOf('-h') >= 0) {
        program.help();
      }
      program.parse(argv);
      require('coffee-script/register');
      cwd = process.cwd();
      for (_i = 0, _len = loads.length; _i < _len; _i++) {
        load = loads[_i];
        console.log("Loading module '" + load + "'...");
        try {
          require(load);
        } catch (_error) {
          e = _error;
          if (e.code !== 'MODULE_NOT_FOUND') {
            console.log(e.toString());
          }
          try {
            require(resolve(cwd, load));
          } catch (_error) {
            e = _error;
            if (e.code !== 'MODULE_NOT_FOUND') {
              console.log(e.toString());
            }
          }
        }
      }
    }

    CommandConsole.prototype.run = function() {
      return this.startCoffee();
    };

    CommandConsole.prototype.startCoffee = function() {
      return cormo_console.startCoffee({
        inspect_depth: this.inspect_depth
      }).on('exit', function() {
        return process.exit(0);
      });
    };

    return CommandConsole;

  })();

  module.exports = CommandConsole;

}).call(this);
