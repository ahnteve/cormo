// Generated by CoffeeScript 1.9.1
(function() {
  var CormoTypesBoolean, CormoTypesDate, CormoTypesGeoPoint, CormoTypesInteger, CormoTypesNumber, CormoTypesObject, CormoTypesRecordID, CormoTypesString, GeoPoint, Integer, RecordID;

  exports.String = CormoTypesString = (function() {
    function CormoTypesString(length) {
      if (!(this instanceof CormoTypesString)) {
        return new CormoTypesString(length);
      }
      this.length = length;
    }

    return CormoTypesString;

  })();

  exports.Number = CormoTypesNumber = (function() {
    function CormoTypesNumber() {}

    return CormoTypesNumber;

  })();

  exports.Boolean = CormoTypesBoolean = (function() {
    function CormoTypesBoolean() {}

    return CormoTypesBoolean;

  })();

  exports.Integer = CormoTypesInteger = (function() {
    function CormoTypesInteger() {}

    return CormoTypesInteger;

  })();

  exports.GeoPoint = CormoTypesGeoPoint = (function() {
    function CormoTypesGeoPoint() {}

    return CormoTypesGeoPoint;

  })();

  exports.Date = CormoTypesDate = (function() {
    function CormoTypesDate() {}

    return CormoTypesDate;

  })();

  exports.Object = CormoTypesObject = (function() {
    function CormoTypesObject() {}

    return CormoTypesObject;

  })();

  exports.RecordID = CormoTypesRecordID = (function() {
    function CormoTypesRecordID() {}

    return CormoTypesRecordID;

  })();

  exports._toCORMOType = function(type) {
    if (typeof type === 'string') {
      type = type.toLowerCase();
      if (/^string\((\d+)\)$/.test(type)) {
        type = new CormoTypesString(Number(RegExp.$1));
      } else {
        switch (type) {
          case 'string':
            type = exports.String;
            break;
          case 'number':
            type = exports.Number;
            break;
          case 'boolean':
            type = exports.Boolean;
            break;
          case 'integer':
            type = exports.Integer;
            break;
          case 'geopoint':
            type = exports.GeoPoint;
            break;
          case 'date':
            type = exports.Date;
            break;
          case 'object':
            type = exports.Object;
            break;
          case 'recordid':
            type = exports.RecordID;
        }
      }
    } else {
      switch (type) {
        case String:
          type = exports.String;
          break;
        case Number:
          type = exports.Number;
          break;
        case Boolean:
          type = exports.Boolean;
          break;
        case Date:
          type = exports.Date;
          break;
        case Object:
          type = exports.Object;
      }
    }
    if (typeof type === 'function') {
      type = new type();
    }
    return type;
  };

  RecordID = (function() {
    function RecordID() {}

    return RecordID;

  })();

  Integer = (function() {
    function Integer() {}

    return Integer;

  })();

  GeoPoint = (function() {
    function GeoPoint() {}

    return GeoPoint;

  })();

}).call(this);
